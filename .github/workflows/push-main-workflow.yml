name: "Working Push"
run-name: "Push on [${{ github.repository }}] @ ${{ github.ref }} by ${{ github.actor }} with ${{ github.event_name }}"

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:


permissions:
  contents: read
  actions: read


concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-push-main"
  cancel-in-progress: false

defaults:
  run:
    shell: zsh -l {0}

# Workflow global feature parameters
env:
  RESTRICTION: "on working push"
  PROGRESSION: 1
  pull_yield_status: "not started"

jobs:

  local-build-yield-to-pull-request:
    name: "Yield to Pull Request when PR exists"
    uses: ./.github/workflows/check-push-yield.yml
    with:
      default-branch: 'main'
      target-branch: 'main'
      restriction: "$RESTRICTION"
    if: ${{ env.PROGRESSION > 1 }}


  local-build-host-environment-checks:
    name: "Sanity Checks build on Self-Hosted Runners"
    needs: [ local-build-yield-to-pull-request ]
    uses: ./.github/workflows/push-environment-checks.yml
    with:
      restriction: "$RESTRICTION"
    secrets: inherit
    if: |
      PROGRESSION > 1 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'

  local-build-project-dependency-hints:
    name: "Impromptu Project Dependencies Checks for Contributors"
    needs: [ local-build-yield-to-pull-request ]
    uses: ./.github/workflows/push-dependency-checks.yml
    with:
      restriction: "$RESTRICTION"
      releases-only: false
    secrets: inherit
    if: |
      PROGRESSION > 2 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'

  local-build-codeql-scan:
    name: "CodeQL Quality Scan on Self-Hosted Runners"
    needs:
      - local-build-yield-to-pull-request
      - local-build-host-environment-checks
    uses: ./.github/workflows/codeql-security-scan.yml
    with:
      restriction: "$RESTRICTION"
    secrets: inherit
    if: |
      PROGRESSION > 5 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'


  local-build-codacy-scan:
    name: "Codacy Security Scan on Self-Hosted Runners"
    needs:
      - local-build-yield-to-pull-request
      - local-build-host-environment-checks
    uses: ./.github/workflows/codacy-security-scan.yml
    with:
      restriction: "$RESTRICTION"
    secrets: inherit
    if: |
      PROGRESSION > 6 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'


  local-build-qodana-scan:
    name: "Qodana Security Scan on Self-Hosted Runners"
    needs:
      - local-build-yield-to-pull-request
      - local-build-host-environment-checks
    uses: ./.github/workflows/qodana-security-scan.yml
    permissions:
      checks: write
      contents: write
      pull-requests: write
      statuses: write
    with:
      restriction: "$RESTRICTION"
    secrets: inherit
    if: |
      PROGRESSION > 7 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'


  workflow-cache-prune:
    name: "Prune Caches by Branch on Self-Hosted Runners"
    needs:
      - local-build-yield-to-pull-request
      - local-build-codacy-scan
      - local-build-codeql-scan
      - local-build-qodana-scan
    uses: ./.github/workflows/cache-prune.yml
    permissions:
      contents: write
      actions: write
    secrets: inherit
    with:
      restriction: 'purge-local-caches'
    if: |
      PROGRESSION > 3 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'



  workflow-runs-prune:
    name: "Prune Stale Workflow Runs"
    needs:
      - local-build-yield-to-pull-request
      - local-build-codacy-scan
      - local-build-codeql-scan
      - local-build-qodana-scan
    uses: ./.github/workflows/actions-prune.yml
    secrets: inherit
    permissions:
      actions: write
      contents: write
    with:
      restriction: 'no restriction'
    if: |
      PROGRESSION > 4 &&
      needs.local-build-yield-to-pull-request.outputs.bypass == 'false'

  push-main-workflow-summary:
    name: "Publish Summary of the Working Push"
    needs:
      - workflow-cache-prune
      - workflow-runs-prune
    if: always()
    uses: ./.github/workflows/push-summary-workflow.yml
    with:
      restriction: "$RESTRICTION"
      yielded: ${{ needs.local-build-yield-to-pull-request.outputs.bypass == 'true' }}
